'use_strict';

const LVG_VERSION = 1;

/**
 * depends: jquery, jszip, FileSaver.js, clipboard.js
 */

$(document).ready(function(){
    // upload handlers
    $("#upload_file").on("change", function(evt){
        function handleFile(f) {
            JSZip.loadAsync(f).then(function(zip){
                return zip.file("project-info.json").async("text");
            }, function (e) {
                // handle errors
            }).then(function(txt){
                setProjectInfo(JSON.parse(txt));
            });
        }
        var files = evt.target.files;
        for (var i = 0; i < files.length; i++) {
            handleFile(files[i]);
        }
    });

    // field_form handlers
    $("#field_form").submit(function(){
        return false;
    });
    $("#field_generateCodeZip").click(function(){
        const projectInfo = getProjectInfo();
        const javaCode = generateCode(projectInfo);
        const full_package = getFullPackage(projectInfo);
        var zip = new JSZip();
        var subfolder = zip;
        var packageArr = full_package.split('.');
        for (i in packageArr) {
            subfolder = subfolder.folder(packageArr[i]);
        }
        subfolder.file(projectInfo.componentName + ".java", javaCode);
        zip.generateAsync({type:"blob"}).then(function(content) {
            saveAs(content, projectInfo.componentName +"-sources.zip");
        });
    });
    $("#field_generateCode").click(function(){
        const projectInfo = getProjectInfo();
        const javaCode = generateCode(projectInfo);
        $("#field_java_code_preview").text(javaCode);
        $("#field_java_code").css("display", "flex");
    });
    $("#field_downloadProject").click(function(){
        const projectInfo = getProjectInfo();
        var zip = new JSZip();
        zip.file("project-info.json", JSON.stringify(projectInfo));
        zip.generateAsync({type:"blob"}).then(function(content) {
            saveAs(content, "project-" + projectInfo.componentName + ".lvg");
        });
    });

    new ClipboardJS('.btn');
});

/**
 * @return build projectInfo with current data from fields(the form)
 */
function getProjectInfo() {
    var projectInfo = {
        "package": $("#field_package").val(),
        "componentName": $("#field_componentName").val(),
        "joinCompNameToPackage": $("#field_package_addCompName").prop("checked"),
        "description": $("#field_description").val().replace(new RegExp('\n',"gm"),"\\n"),
        "version": Number.parseInt($("#field_version").val()),
    }
    return projectInfo;
}
/**
 * set projectInfo to current form
 * @param {*} projectInfo 
 */
function setProjectInfo(projectInfo) {
    if(confirm('Applying a project would override what you current got on this page! Continue?')) {
        $("#field_package").val(projectInfo.package);
        $("#field_componentName").val(projectInfo.componentName);
        $("#field_package_addCompName").prop("checked", projectInfo.joinCompNameToPackage);
        $("#field_description").val(projectInfo.description);
        $("#field_version").val(projectInfo.version);
    }
}

/**
 * @param  projectInfo
 * @return full package string
 */
function getFullPackage(projectInfo) {
    return projectInfo.joinCompNameToPackage
        ? projectInfo.package + '.' + projectInfo.componentName
        : projectInfo.package;
}

/**
 * @param  projectInfo
 * @return java code of the listview
 */
function generateCode(projectInfo) {
    const full_package = getFullPackage(projectInfo);
    var javaCode = ""
    + "/**\n"
    + " * This file is generated by ListView Generator(v"+LVG_VERSION+") by ColinTree\n"
    + " * Find more infomation on github: https://github.com/ColinTree/ListViewGenerator \n"
    + " */\n"
    + "package " + full_package +";\n"
    + "\n"
    + "import com.google.appinventor.components.annotations.*;\n"
    + "import com.google.appinventor.components.common.*;\n"
    + "import com.google.appinventor.components.runtime.*;\n"
    + "import com.google.appinventor.components.runtime.util.*;\n"
    + "\n"
    + "import android.content.Context;\n"
    + "\n"
    + "@DesignerComponent(version = " + projectInfo.componentName + ".VERSION,\n"
    + "    description = \"" + projectInfo.description + "\",\n"
    + "    category = ComponentCategory.EXTENSION,\n"
    + "    nonVisible = true)\n"
    + "@SimpleObject(external = true)\n"
    + "public class " + projectInfo.componentName + " extends AndroidNonvisibleComponent {\n"
    + "\n"
    + "    public static final String LOG_TAG = \"" + projectInfo.componentName + "\";\n"
    + "    public static final int VERSION = " + projectInfo.version + ";\n"
    + "\n"
    + "    private final ComponentContainer container;\n"
    + "    private final Context context;\n"
    + "    private final Form form;\n"
    + "\n"
    + "    public " + projectInfo.componentName + "(ComponentContainer container) {\n"
    + "        super(container.$form());\n"
    + "        this.container = container;\n"
    + "        this.context = container.$context();\n"
    + "        this.form = container.$form();\n"
    + "    }\n"
    + "\n"
    + "}";

    return javaCode;
}